<template>
    <div class="comment-container">
        <div class="comment-header">
            <span class="comment-header-count">{{count | splitComment(true)}}</span>
            <span v-if='count > 9'>{{count | splitComment}}</span>
            <span class="comment-header-title">条评论</span>
        </div>
        <div class="make-comment clearfix">
            <div class="user-thumb fl">
                <img class='thumb' :src="authInfo.header" alt="" v-if='authInfo'>
                <img class='thumb' src="/static/images/header/default.jpg" alt="" v-else>
            </div>
            <div class="comment-editor-container">
                <touch-reply :id='id' :maxLength='140' :module='module' @mergeComment="postComment"></touch-reply>
                <span class="comment-direction-icon"></span>
            </div>
        </div>
        <div v-if='comments.length'>
            <ul class="comment-ul-container">
                <li class="comment-item clearfix" v-for='(comment, index) in comments'>
                    <div class="user-thumb fl">
                        <img class='thumb' :src="comment.uid.header" alt="">
                    </div>
                    <div class="comment-item-content">
                        <div class="first-level comment-level">
                            <span class="nickname">{{comment.uid.nickname}}：</span>
                            <span v-html='transformComment(comment.content)'></span>
                        </div>
                        <div class="second-level comment-level" v-if='comment.replyInfo'>
                            <span class="nickname">@ {{comment.replyInfo.nickname}}：</span>
                            <span v-html='transformComment(comment.replyInfo.content)'></span>
                        </div>
                        <div class="item-info clearfix">
                            <div class="created fl">{{comment.created | getTimeStr('yyyy年MM月dd日 hh:mm')}}</div>
                            <div class="opration fr">
                                <div class="opration-up-down" :class="{active: authInfo && comment.ups.indexOf(authInfo.id) !== -1}">
                                    <i class="fa fa-thumbs-o-up fa-lg" @click='upComment(comment._id, index)' ></i>
                                    <span class="up-count">({{comment.upsCount}})</span>
                                </div>
                                <span @click='switchReplyPosition(index, comment.uid._id)'>回复</span>
                            </div>
                        </div>
                        <div class="reply-position-container" v-if='index === replyIndex'>
                            <touch-reply :id='id' :maxLength="140" :module='module' :cid='comment._id' :toUserName='comment.uid.nickname' @mergeComment='postComment'></touch-reply>
                        </div>
                    </div>
                </li>
            </ul>
            <div class="load-tips" v-if='loading'><i class="fa fa-spinner fa-pulse"></i>正在加载中...</div>
            <div class="load-tips" v-if='!hasMore'>已加载全部评论...</div>
        </div>
        <div class="no-comment" v-else>快来抢沙发吧！</div>
    </div>
</template>

<script>
    import { $, offsetDistance, scrollTop } from '../lib/util'
    import { transformEmoji } from '../lib/emoji'
    import { alert } from '../lib/dialog'
    import touchReply from './reply.vue'
    import Api from '../api/index'

    export default {
        data () {
            return {
                skip: 0,
                loading: true,
                comments: [],
                hasMore: true,
                count: 0,
                upCommentFlag: true,
                replyIndex: -1
            }
        },
        props: {
            id: {
                type: String,
                required: true
            },
            module: {
                type: Number,
                required: true
            }
        },
        computed: {
            loadOffsetTop () {
                let offsetEle = $('.comment-item', document, true)[this.comments.length - 4]
                return offsetDistance(offsetEle, 'offsetTop')
            },
            authInfo () {
                return this.$store.getters.getAuthInfo
            }
        },
        mounted () {
            this.loadComment(true)
        },
        methods: {
            loadComment (init) {
                let data = {id: this.id}
                if (!init) data.query = {skip: this.skip}
                Api.getComment(data)
                    .then(response => {
                        let result = response.data
                        let comments = result.comments
                        this.hasMore = result.more
                        this.count = result.count
                        if (init) {
                            this.comments = comments
                        } else {
                            this.comments = this.comments.concat(comments)
                        }
                        this.skip += comments.length
                        this.loading = false
                    })
                    .catch(err => {
                        console.log(err)
                    })
            },
            upComment (cid, index) {
                if (!this.authInfo) {
                    alert('请先登录')
                    return
                }
                if (!this.upCommentFlag) return
                this.upCommentFlag = false
                let data = {cid: cid}
                Api.upComment(data)
                    .then(response => {
                        let result = response.data
                        let item = this.comments[index]
                        if (result.action === 'up') {
                            /* todo +1飘上去 */
                            item.ups.push(result.uid)
                            item.upsCount++
                        } else {
                            let upIndex = item.ups.indexOf(result.uid)
                            item.ups.splice(upIndex, 1)
                            item.upsCount--
                        }
                        this.upCommentFlag = true
                    })
                    .catch(err => {
                        console.log(err)
                    })
            },
            switchReplyPosition (index, uid) {
                let tipMsg
                if (!this.authInfo) {
                    tipMsg = '请先登录'
                }
                if (uid === this.authInfo.id) {
                    tipMsg = '不能回复自己的评论'
                }
                if (tipMsg) {
                    alert(tipMsg)
                    return
                }
                this.replyIndex = (this.replyIndex === index ? -1 : index)
            },
            transformComment (comment) {
                return transformEmoji(comment)
            },
            postComment (value) {
                let [comment, reply] = value
                let tipMsg = '评论成功！'
                this.comments.unshift(comment)
                this.count++
                if (reply) {
                    this.replyIndex = -1
                    tipMsg = '回复成功！'
                }
                alert(tipMsg)
            },
            loadMoreComment () {
                if (this.loading || !this.hasMore) return
                let offsetTop = scrollTop() + window.innerHeight
                if (offsetTop >= this.loadOffsetTop) {
                    this.loading = true
                    this.loadNetEaseComment(false)
                }
            }
        },
        components: {
            touchReply
        },
        watch: {
            id (to) {
                if (to) {
                    this.comments = []
                    this.$nextTick(() => {
                        this.loadComment(true)
                    })
                }
            },
            comments (to, from) {
                if (!from.length && this.hasMore) {
                    this.$nextTick(() => {
                        document.onscroll = this.loadMoreComment
                    })
                }
            }
        }
    }
</script>

<style lang='stylus'>
    .comment-container
        margin 30px 0 20px
        padding 0 15px
        font-size 14px
        color #333
        .comment-header
            display inline-block
            position relative
            margin-bottom 60px
            padding 0 10px
            font-size 18px
            color #666
            line-height 40px
            background #eee
            &:after
                content ''
                position absolute
                bottom -10px
                left 10px
                width 0
                height 0
                border-top 10px solid #eee
                border-right 20px solid transparent
            .comment-header-count
                display inline-block
                transform rotate(-16deg)
            .comment-header-title
                margin-left 10px
        .user-thumb
            width 60px
            height 60px
            border 1px solid #f5f5f5
            overflow hidden
            .thumb
                width 100%
                height 100%
        .make-comment
            margin-bottom 20px
            .comment-editor-container
                position relative
                margin-left 90px
                .comment-direction-icon
                    position absolute
                    top 20px
                    left 0
                    width 12px
                    height 12px
                    background #fff
                    border 1px solid #ccc
                    border-right-color transparent
                    border-bottom-color transparent
                    transform translateX(-50%) rotate(-45deg)
        .comment-ul-container
            position relative
            .comment-item
                padding 20px 0 10px
                border-bottom 1px dotted #ccc
                .comment-item-content
                    margin-left 80px
                    .comment-level
                        margin-bottom 8px
                        line-height 1.75em
                        padding 8px 10px
                        .nickname
                            color #5e8edd
                    .first-level
                        padding-top 0
                    .second-level
                        background #eee
                        color #555
                    .item-info
                        padding 8px 10px
                        color #999
                        cursor pointer
                        .opration-up-down
                            display inline-block
                            margin-right 10px
                            &.active
                                color #de4c4c
            .reply-position-container
                position relative
                padding 19px
                margin 10px 0
                border 1px solid #d9d9d9
                background #f8f8f8
                &:after
                    content: ''
                    position absolute
                    top 0
                    right 12px
                    width 12px
                    height 12px
                    background #f8f8f8
                    border 1px solid #d9d9d9
                    border-right-color transparent
                    border-bottom-color transparent
                    transform translateY(-50%) rotate(45deg)
        .load-tips
            line-height 50px
            font-size 20px
            text-align center
            color #888
            .fa
                margin-right 8px
        .no-comment
            line-height 50px
            text-align center
            font-size 24px
            color #888
        .comment-more
            border 2px solid currentColor
            color #de4c4c
            font-size 18px
            font-weight 600
            line-height 30px
            text-align center
</style>