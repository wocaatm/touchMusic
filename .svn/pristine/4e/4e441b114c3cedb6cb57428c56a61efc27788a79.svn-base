<template>
    <div id="musics">
        <touch-header :tab='1'></touch-header>
        <div class="scroll-fix-wrapper">
            <div class="musics-container container clearfix">
                <div class="music-list-contianer fl">
                    <ul class="clearfix">
                        <li class="music-item fl" v-for='music in list'>
                            <router-link :to="{name: 'music', params: {id: music._id}}">
                                <div class="music-item-thumb">
                                    <img :src="music.thumb" alt="" width="100%" height="320px">
                                </div>
                                <div class="music-item-info">
                                    <h3 class="music-info-name music-animation single-ellipsis">{{music.name}}</h3>
                                    <div class="music-info-artist-album music-animation">发布者：{{music.uid.nickname}}</div>
                                    <p class="music-desciption music-animation">{{music.description}}</p>
                                    <div class="music-other music-animation">
                                        <span class="music-icon"><i class="fa fa-eye"></i>{{music.pv}}</span>
                                        <span class="music-icon"><i class="fa fa-heart"></i>{{music.collectCount}}</span>
                                        <span class="music-icon"><i class="fa fa-calendar"></i>{{music.created | getTimeStr}}</span>
                                    </div>
                                </div>
                            </router-link>
                        </li>
                    </ul>
                    <div class="loading-tip-container" v-if='loading'>
                        <i class="fa fa-spinner fa-pulse fa-2x loading-icon"></i><span class="loading-text">正在加载中...</span>
                    </div>
                    <div class="load-all-music" v-if='!hasMore && list.length'><span class="load-all-tip">我承认你知我长短了~~</span></div>
                    <div class="no-music-list" v-if='!loading && !list.length'>这个地方暂时还没有放东西进来，你等着，马上就来~</div>
                </div>
                <div class="slider-container fr">
                    <touch-slider :type='0'></touch-slider>
                </div>
            </div>
        </div>
    </div>
</template>

<script>
    import touchHeader from '../components/header'
    import touchSlider from '../components/slider.vue'
    import { getLastTimeStr, scrollTop, offsetDistance, $, sessionStore, equalObjectProperty } from '../lib/util'
    import Api from '../api/index'

    export default {
        data () {
            return {
                list: [],
                limit: 10,
                skip: 0,
                loadLastIndex: 2,
                hasMore: true,
                loading: true
            }
        },
        computed: {
            offsetTop () {
                let items = $('.music-item', document, true)
                let offsetEle = items[this.list.length - this.loadLastIndex]
                return offsetDistance(offsetEle, 'offsetTop')
            }
        },
        mounted () {
            let sessionInfo = sessionStore('list', null)
            if (sessionInfo && equalObjectProperty(sessionInfo.query, this.$route.query)) {
                let {hasMore, scrollTop, skip, list, loading} = sessionInfo
                this.hasMore = hasMore
                this.skip = skip
                this.list = list
                this.loading = loading
                this.$nextTick(() => {
                    window.scrollTo(0, scrollTop)
                })
            } else {
                this.getMusicList(true)
            }
        },
        methods: {
            getMusicList (init) {
                let query = Object.assign({}, this.$route.query, {limit: this.limit, skip: this.skip})
                Api.getMusicsList(query)
                    .then((response) => {
                        let result = response.data
                        if (result.length < this.limit) this.hasMore = false
                        if (init) {
                            this.list = result
                        } else {
                            this.list = this.list.concat(result)
                        }
                        this.skip += result.length
                        this.loading = false
                    })
                    .catch(err => {
                        console.log(err)
                    })
            },
            loadMore () {
                if (this.loading || !this.hasMore) return
                let scroll = scrollTop() + window.innerHeight
                if (scroll >= this.offsetTop) {
                    this.loading = true
                    this.getMusicList(false)
                }
            }
        },
        filters: {
            getTimeStr (time) {
                return getLastTimeStr(new Date(time), 'yyyy-MM-dd')
            }
        },
        beforeRouteEnter (to, from, next) {
            if (from.name !== 'music') {
                sessionStore('list', null, true)
            }
            next()
        },
        beforeRouteLeave (to, from, next) {
            if (to.name === 'music') {
                let info = {
                    list: this.list,
                    skip: this.skip,
                    hasMore: this.hasMore,
                    loading: this.loading,
                    query: this.$route.query,
                    scrollTop: scrollTop()
                }
                sessionStore('list', info)
            }
            document.onscroll = null
            next()
        },
        components: {
            touchHeader,
            touchSlider
        },
        watch: {
            '$route' (to, from) {
                this.skip = 0
                this.hasMore = true
                if (this.$route.query) this.query = this.$route.query
                this.getMusicList(true)
            },
            list (to, from) {
                if (!from.length && this.hasMore) {
                    this.$nextTick(() => {
                        document.onscroll = this.loadMore
                    })
                }
            }
        }
    }
</script>

<style lang='stylus'>
    .musics-container
        margin 60px auto
        .music-list-contianer
            width 750px
            .music-item
                position relative
                box-sizing border-box
                width 350px
                overflow hidden
                margin 0 50px 20px 0
                cursor pointer
                &:nth-child(2n)
                    margin-right 0
                .music-item-info
                    opacity 0
                    position absolute
                    top 0
                    left 0
                    bottom 0
                    right 0
                    background rgba(0,0,0,.6)
                    padding 0px 20px
                    color #fff
                    .music-info-name
                        margin-top 10px
                        padding 8px 0
                        font-size 24px
                        text-align center
                        transform translateY(-50px)
                    .music-info-artist-album
                        margin-top 18px
                        font-size 14px
                        text-align right
                        transform translateX(-110%)
                    .music-desciption
                        max-height 100px
                        overflow hidden
                        margin-top 36px
                        font-size 14px
                        text-indent 2em
                        line-height 1.75em
                        transform translateX(110%)
                    .music-other
                        display flex
                        justify-content space-around
                        position absolute
                        bottom 0
                        left 0
                        right 0
                        font-size 14px
                        line-height 40px
                        transform translateY(100%)
                        .fa
                            margin-right 5px
                &:hover
                    .music-item-info
                        opacity 1
                        .music-animation
                            transform translate(0,0)
                            transition transform 0.4s ease-out
                            &.music-info-name
                                transition transform 0.4s cubic-bezier(.17,.67,.48,1.49)
            .loading-tip-container
                margin-top 20px
                line-height 30px
                text-align center
                .loading-icon
                    vertical-align -3px
                .loading-text
                    margin-left 10px
                    font-size 20px
                    color #333
            .load-all-music
                position relative
                margin-top 40px
                border 1px solid currentColor
                color #bbb
                font-size 20px
                .load-all-tip
                    position absolute
                    top 0
                    left 50%
                    padding 0 30px
                    background #fff
                    z-index 1
                    transform translate(-50%, -50%)    
            .no-music-list
                line-height 24px
                text-align center
                color #666
                font-size 16px
        .slider-container
            width 320px
</style>